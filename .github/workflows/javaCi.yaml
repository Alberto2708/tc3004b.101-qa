name: Combined CI Workflow

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - uses: actions/checkout@v4

      # Set up Java
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      # Set up Node.js
      - name: Set up Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Grant execute permissions to Maven wrapper
      - name: Grant execute permissions to mvnw
        run: chmod +x src/backend/mvnw

      # Build and run the backend
      - name: Build and Run Backend
        run: |
          cd src/backend
          ./mvnw clean spring-boot:run &
          echo "Waiting for the server to start..."
          attempt_counter=0
          max_attempts=20
          sleep_duration=10
          until $(curl --output /dev/null --silent --head --fail http://localhost:9090/add?num1=5&num2=3); do
              if [ ${attempt_counter} -eq ${max_attempts} ]; then
                echo "Max attempts reached. Server did not start."
                exit 1
              fi
              printf '.'
              attempt_counter=$(($attempt_counter+1))
              sleep ${sleep_duration}
          done
          echo "Server is ready for testing."

      # Install Newman for Postman tests
      - name: Install Newman
        run: npm install -g newman

      # Run Postman tests
      - name: Run Newman Tests
        run: |
          newman run src/backend/src/main/resources/SoftwareQuality.postman_collection.json

  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-22.04

    container:
      image: node:20

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - uses: browser-actions/setup-chrome@v1
        with:
          chrome-version: 120
          install-dependencies: true

      - name: Run Selenium Tests
        run: |
          mkdir -p screenshots
          cd src/frontend
          python3 -m http.server 9090 &
          sleep 20 &&
          curl http://localhost:9090
          cd ../..
          npm install
          cd tests
          npm install
          ../node_modules/.bin/mocha *.js
          echo "Placeholder screenshot" > ../screenshots/placeholder.txt

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: screenshots
          path: screenshots/
